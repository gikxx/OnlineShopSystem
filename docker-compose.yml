version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP порт
      - "15672:15672"  # Management UI
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  postgres-orders:
    image: postgres
    environment:
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: order_pass
      POSTGRES_DB: ordersdb
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U order_user -d ordersdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_orders_data:/var/lib/postgresql/data

  postgres-payments:
    image: postgres
    environment:
      POSTGRES_USER: pay_user
      POSTGRES_PASSWORD: pay_pass
      POSTGRES_DB: paymentsdb
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pay_user -d paymentsdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_payments_data:/var/lib/postgresql/data

  orders-service:
    build:
      context: ./OrdersService
      dockerfile: Dockerfile
    ports:
      - "5001:80"  # HTTP
      - "5002:443"  # HTTPS
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-orders:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres-orders;Database=ordersdb;Username=order_user;Password=order_pass
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672

  payments-service:
    build:
      context: ./PaymentsService
      dockerfile: Dockerfile
    ports:
      - "5003:80"  # HTTP
      - "5004:443"  # HTTPS
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-payments:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres-payments;Database=paymentsdb;Username=pay_user;Password=pay_pass
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672

  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - "5000:80"  # HTTP
      - "5005:443"  # HTTPS
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Services__Orders=http://orders-service:80
      - Services__Payments=http://payments-service:80

volumes:
  rabbitmq_data:
  postgres_orders_data:
  postgres_payments_data: